swagger: '2.0'
info:
  title: Workflows
  version: '1'
  description: |
    An API for workflow management.
    Intended for use by other services.

host: 'mender-workflows-server:8080'
schemes:
  - http

consumes:
  - application/json
produces:
  - application/json

responses:
  NotFoundError: # 404
    description: Not Found.
    schema:
      $ref: "#/definitions/Error"
  ConflictError: # 409
    description: Conflict, record already exists.
    schema:
      $ref: "#/definitions/Error"
  InternalServerError: # 500
    description: Internal Server Error.
    schema:
      $ref: "#/definitions/Error"
  InvalidRequestError: # 400
    description: Invalid Request.
    schema:
      $ref: "#/definitions/Error"

paths:
  /status:
    get:
      operationId: Check Liveliness
      summary: Check if service API is alive and serving requests
      responses:
        200:
          description: Successful response.
          examples:
            application/json:
              status: ok
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        500:
          $ref: "#/responses/InternalServerError"

  /health:
    get:
      operationId: Check Health
      summary: Check if service and all operational dependencies are healthy.
      responses:
        204:
          description: Service is healthy.
        502:
          description: Service is temporarily unavailable (currently unhealthy).
          schema:
            $ref: "#/definitions/Error"
        500:
          $ref: "#/responses/InternalServerError"

  /api/v1/workflow/{name}:
    post:
      operationId: Start Workflow
      summary: Start a new workflow
      description: |
        Starts a new workflow given by the name path-parameter.
      parameters:
        - name: name
          in: path
          description: Workflow identifier.
          required: true
          type: string
        - name: JobParameters
          in: body
          required: true
          description: Contains the definition of the job to be started.
          schema:
            type: array
            items:
              $ref: "#/definitions/InputParameter"
      responses:
        201:
          description: Workflow created successfully
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        400:
            $ref: "#/responses/InvalidRequestError"
        404:
            $ref: "#/responses/NotFoundError"

  /api/v1/workflow/{name}/batch:
    post:
      operationId: Start Batch Workflows
      summary: Start a batch of workflows
      description: |
        Starts a new workflow given by the name path-parameter.
      parameters:
        - name: name
          in: path
          description: Workflow identifier.
          required: true
          type: string
        - name: JobParameters
          in: body
          required: true
          description: Contains the definition of the job to be started.
          schema:
            type: array
            items:
              type: array
              items:
                $ref: "#/definitions/InputParameter"
      responses:
        201:
          description: Workflows created successfully
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                error:
                  type: string
        400:
            $ref: "#/responses/InvalidRequestError"
        404:
            $ref: "#/responses/NotFoundError"

  /api/v1/workflow/{name}/{id}:
    get:
      operationId: Workflow Status
      summary: Gets the workflow status for the given id.
      description: |
        Gets the workflow status for the given workflow name and id provided
        by the path parameters.
      parameters:
        - name: name
          in: path
          description: Workflow identifier.
          required: true
          type: string
        - name: id
          in: path
          description: Job identifier
          required: true
          type: string
      responses:
        200:
          description: Successful query
          schema:
            $ref: "#/definitions/JobStatus"
        404:
          $ref: "#/responses/NotFoundError"

  /api/v1/metadata/workflows:
    get:
      operationId: List Workflows
      summary: Get all workflow definitions
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Workflow"

    post:
      operationId: Register Workflow
      summary: Register a new workflow
      parameters:
        - name: workflowDefinition
          in: body
          description: Workflow definition.
          required: true
          schema:
            $ref: "#/definitions/Workflow"
      responses:
        201:
          description: Successful response.
        400:
          $ref: "#/responses/InvalidRequestError"
        409:
          $ref: "#/responses/ConflictError"

  /api/v1/jobs/{id}:
    get:
      operationId: Job Structure
      summary: Gets the job for the given id.
      description: |
        Gets the job object for the given job id.
      parameters:
        - name: id
          in: path
          description: Job identifier
          required: true
          type: string
      responses:
        200:
          description: Successful query
          schema:
            $ref: "#/definitions/JobObject"
        404:
          $ref: "#/responses/NotFoundError"

definitions:
  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
    example:
      error: "failed: JSON payload is empty"

  CLIParams:
    description: CLI parameters
    type: object
    properties:
      command:
        type: array
        items:
          type: string
      executionTimeOut:
        type: integer

  HTTPParams:
    description: HTTP parameters
    type: object
    properties:
      uri:
        type: string
      method:
        type: string
      contentType:
        type: string
      body:
        type: string
      json:
        type: object
      headers:
        type: object
      statusCodes:
        type: array
        items:
          type: integer
      connectionTimeOut:
        type: integer
      readTimeOut:
        type: integer

  Task:
    description: Task definition
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      retries:
        type: integer
      retryDelaySeconds:
        type: integer
      requires:
        type: array
        items:
          type: string
      cli:
        $ref: "#/definitions/CLIParams"
      http:
        $ref: "#/definitions/HTTPParams"
    required:
      - name
      - type

  Workflow:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      version:
        type: integer
      schemaversion:
        type: integer
      tasks:
        type: array
        items:
          $ref: "#/definitions/Task"
      inputParameters:
        type: array
        items:
          type: string
    required:
      - name
      - version
      - tasks

  InputParameter:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
    required:
      - name
      - value
    example:
      name: key
      value: parameter

  TaskResultCLI:
    type: object
    properties:
      command:
        type: array
        items:
          type: string
      output:
        type: string
      error:
        type: string
      exitCode:
        type: integer

  TaskResultHTTPRequest:
    type: object
    properties:
      statusCode:
        type: integer
      body:
        type: string

  TaskResultHTTPResponse:
    type: object
    properties:
      uri:
        type: string
      method:
        type: string
      headers:
        type: array
        items:
          type: string
      body:
        type: string

  TaskResult:
    type: object
    properties:
      success:
        type: boolean
      cli:
        $ref: "#/definitions/TaskResultCLI"
      request:
        $ref: "#/definitions/TaskResultHTTPRequest"
      response:
        $ref: "#/definitions/TaskResultHTTPResponse"

  JobStatus:
    type: object
    properties:
      id:
        type: string
      workflowName:
        type: string
      inputParameters:
        type: array
        items:
          $ref: "#/definitions/InputParameter"
      status:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/TaskResult"

  JobObject:
    type: object
    properties:
      id:
        type: string
      workflowName:
        type: string
      inputParameters:
        type: array
        items:
          $ref: "#/definitions/InputParameter"
      status:
        type: string
      results:
        type: array
        items:
          $ref: "#/definitions/TaskResult"
      insert_time:
        type: string
        format: date-time
      version:
        type: string
